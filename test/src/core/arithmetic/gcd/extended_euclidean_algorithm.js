import test from 'ava' ;

import { parse , stringify , extended_euclidean_algorithm } from "../../../../../src/index.js" ;

const ge = ( t , a , b , v ) => t.true( a >= b , `${v} = ${a} >= ${b}` ) ;
const le = ( t , a , b , v ) => t.true( a <= b , `${v} = ${a} <= ${b}` ) ;

function macro ( t , A , B , D , X , Y , U , V , steps ) {

	const r = 10 ;

	const a = parse( 10 , r , A ) ;
	const aj = a.length ;
	const ai = 0 ;

	const b = parse( 10 , r , B ) ;
	const bj = b.length ;
	const bi = 0 ;

	const [ d , di , x , xi , y , yi , u , ui , v , vi , s ] = extended_euclidean_algorithm( r , a , ai , aj , b , bi , bj ) ;

	ge(t,di,0,'di');
	le(t,di,d.length,'di');
	ge(t,xi,0,'xi');
	le(t,xi,x.length,'xi');
	ge(t,yi,0,'yi');
	le(t,yi,y.length,'yi');
	ge(t,ui,0,'ui');
	le(t,ui,u.length,'ui');
	ge(t,vi,0,'vi');
	le(t,vi,v.length,'vi');

	t.is( steps , s , 'steps' ) ;

	const _d = stringify( r , 10 , d , di , d.length ) ;
	const _x = stringify( r , 10 , x , xi , x.length ) ;
	const _y = stringify( r , 10 , y , yi , y.length ) ;
	const _u = stringify( r , 10 , u , ui , u.length ) ;
	const _v = stringify( r , 10 , v , vi , v.length ) ;

	t.is( D , _d , 'd' ) ;
	t.is( X , _x , 'x' ) ;
	t.is( Y , _y , 'y' ) ;
	t.is( U , _u , 'u' ) ;
	t.is( V , _v , 'v' ) ;

}

macro.title = ( _ , A , B , D , X , Y , U , V , steps ) => `GCD(${A}, ${B}) = ${D} = ${X}*${A} - ${Y}*${B} AND ${U} * ${A} = ${V} * ${B} (${steps} steps)` ;

// a > b
// d = a * x + b * y
// ud = b <=> u = b / d
// vd = a <=> v = a / d
// => ua - vb = ab/d - ba/d = 0
test( macro ,   '1' ,  '0' , '1' , '1' ,   '0' ,  '0' ,   '1' , 1 ) ;
test( macro ,   '0' ,  '1' , '1' , '0' ,   '1' ,  '1' ,   '0' , 2 ) ;
test( macro , '240' , '46' , '2' , '9' ,  '47' , '23' , '120' , 6 ) ;
test( macro , '999' ,  '1' , '1' , '0' ,   '1' ,  '1' , '999' , 2 ) ;
test( macro , '999' ,  '2' , '1' , '1' , '499' ,  '2' , '999' , 3 ) ;
test( macro , '999' ,  '3' , '3' , '0' ,   '1' ,  '1' , '333' , 2 ) ;
test( macro , '999' ,  '4' , '1' , '1' , '250' ,  '4' , '999' , 4 ) ;
test( macro , '999' ,  '5' , '1' , '1' , '200' ,  '5' , '999' , 4 ) ;
test( macro , '999' ,  '6' , '3' , '1' , '166' ,  '2' , '333' , 3 ) ;

test( macro ,
	'89798763754892653453379597352537489494736' ,
	'978' ,
	'6' ,
	'57' ,
	'5233670280193130109246050152448503988957' ,
	'163' ,
	'14966460625815442242229932892089581582456' ,
	7
) ;

test( macro ,
	'1234567891011121314151617181920212223242526272829' ,
	'1221' ,
	'3' ,
	'96' ,
	'97066762929621331825188574499869265709486095161' ,
	'407' ,
	'411522630337040438050539060640070741080842090943' ,
	7
) ;

test( macro ,
	'8918391893892839282938092838273908' ,
	'9238902830982083209836079238902830' ,
	'18' ,
	'196260821226532250117922974202329',
	'189452248728694447618227772406725',
	'513272379499004622768671068827935',
	'495466216327379960163227379904106',
	60
) ;

test( macro ,
	'37650526072328171936695291762250209370684337226819795603338569781977444693437332193180866661042770508342415236941382410000000000000000' ,
	'5696107759173612435215985096515090524728819689625373634782109911819800000000' ,
	'12272004900965151087327615491240194950486574150898137749184200000000' ,
	'144546941' ,
	'955436343708733262264503439145449113981822054797863712652831187021' ,
	'464154619' ,
	'3068001225241287771831903872810048737621643537724534437296050000000' ,
	21
) ;

test( macro ,
	'432098403928041873297392719837982749873983279473289479327493284793287498162393740164165983274864832164875183264' ,
	'7326498326418236481264389164986482164387619823741294681431648376821468213648217649873214639821' ,
	'1' ,
	'70043170308577841790901973523044584915855330486448613200408375753217211410942292553022335592' ,
	'4130969632145217993835085987649256842613363564725738267141839343576749111824609588437426577104148903196635909' ,
	'7326498326418236481264389164986482164387619823741294681431648376821468213648217649873214639821' ,
	'432098403928041873297392719837982749873983279473289479327493284793287498162393740164165983274864832164875183264' ,
	172
) ;

test( macro ,
	'432098403928041873297392719837982749873983279473289479327493284793287498162393740164165983274864832164875183264' ,
	'73264983264182364812643891649864821643876198237412946814316483768214682136482176498573214639821208' ,
	'776' ,
	'41694456345076671794355149523694764177222151506203366353494197000190744202549435308862685363723' ,
	'245903393909088985240590322881406144770470086821972948207378985268602417576411281642626798219110113136324431' ,
	'94413638227039129913200891301372192840046647213161013935974850216771497598559505797130431236883' ,
	'556827840113456022290454535873689110662349586950115308411718150506813786291744510520832452673794886810406164' ,
	178
) ;

test( macro ,
	'27464428722379302537066207419729547039001666019484342119914191943374771553192802830064910464708682216' ,
	'1235538557263503135080009921155585529085345118770499482621630836795609586373233972978224047042123566' ,
	'74997500588773686591299665516865519759664950655978' ,
	'7538724761555610090827422120944030717270450777967' ,
	'167576129173946225301933673091336299297968056079975' ,
	'16474396447399073360821991087445637049163796086747' ,
	'366204586909799364719352460854718749306649209643172' ,
	104
)

// test generated with https://github.com/aureooms-research/gcd
